<DOCTYPE! html>
<meta charset="utf-8">
<html lang="en">
<head>
  <% include ../partials/head.ejs %>
</head>
<body class="container">
  <header>
    <% include ../partials/header.ejs %>
  </header>

  <main style="padding-top:60px;">
    <div class="row">
      <div class="col-lg-6">
        <h2>
          <strong><%= team_num %> - <%= team_name %></strong>
          <br />
          <div class="btn-group" role="group" aria-label="..." style="top: 5px;">
            <a href="/team/<%= previous_team_num %>" type="button" class="btn btn-default">Previous</a>
            <a href="/team/<%= next_team_num %>" type="button" class="btn btn-default">Next</a>
          </div>
        </h2>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-5">
        <h3><u>Autonomous Data</u></h3>
        <table class="table">
          <tr>
            <td><h5 style="margin-top:0;">Cross: <%= tot_auto_cross %></h5></td>
            <td style="text-align:right; padding-right:50px;"><h5 style="margin-top:0;">Left Starts: <%= tot_auto_left %></h5></td>
          </tr>
          <tr>
            <td><h5 style="margin-top:0;">Center Starts: <%= tot_auto_center %></h5></td>
            <td style="text-align:right; padding-right:50px;"><h5 style="margin-top:0;">Right Starts: <%= tot_auto_right %></h5></td>
          </tr>
          <tr>
            <td><h5 style="margin-top:0;">Pyramid Intake: <%= tot_auto_pyramid_intake %></h5></td>
            <td style="text-align:right; padding-right:50px;"><h5 style="margin-top:0;">Unprotected Intake: <%= tot_auto_unprotected_intake %></h5></td>
          </tr>
          <tr>
            <td><h5 style="margin-top:0;">Near Switch: <%= tot_auto_near_switch_made %> / <%= tot_auto_near_switch_attempts %></h5></td>
            <td style="text-align:right; padding-right:50px;"><h5 style="margin-top:0;">Exchange: <%= tot_auto_exchange_made %> / <%= tot_auto_exchange_attempts %></h5></td>
          </tr>
          <tr>
            <td><h5 style="margin-top:0;">Scale High: <%= tot_auto_scale_high_made %> / <%= tot_auto_scale_high_attempts %></h5></td>
            <td style="text-align:right; padding-right:50px;"><h5 style="margin-top:0;">Scale Low: <%= tot_auto_scale_low_made %> / <%= tot_auto_scale_low_attempts %></h5></td>
          </tr>
        </table>
        <h3><u>Teleop Data</u></h3>
        <table class="table">
          <tr>
            <td><h5 style="margin-top:0;">Total Cubes: <%= avg_tele_cubes_scored %> (Max: <%= max_tele_cubes_scored %>)</h5></td>
            <td style="text-align:right; padding-right:50px;"><h5 style="margin-top:0;">Exchange: <%= avg_tele_exchange_made %> / <%= avg_tele_exchange_attempts %></h5></td>
          </tr>
          <tr>
            <td><h5 style="margin-top:0;">Near Switch: <%= avg_tele_near_switch_made %> / <%= avg_tele_near_switch_attempts %></h5></td>
            <td style="text-align:right; padding-right:50px;"><h5 style="margin-top:0;">Far Switch: <%= avg_tele_far_switch_made %> / <%= avg_tele_far_switch_attempts %></h5></td>
          </tr>
          <tr>
            <td><h5 style="margin-top:0;">Scale High: <%= avg_tele_scale_high_made %> / <%= avg_tele_scale_high_attempts %></h5></td>
            <td style="text-align:right; padding-right:50px;"><h5 style="margin-top:0;">Scale Low: <%= avg_tele_scale_low_made %> / <%= avg_tele_scale_low_attempts %></h5></td>
          </tr>
          <tr>
            <td><h5 style="margin-top:0;">Knockouts: <%= avg_tele_knockouts %></h5></td>
            <td style="text-align:right; padding-right:50px;"><h5 style="margin-top:0;">Cubes Dropped: <%= avg_tele_cubes_dropped %></h5></td>
          </tr>
          <tr>
            <td><h5 style="margin-top:0;">Total Intake: <%= avg_tele_intake %> (Max: <%= max_tele_intake %>)</h5></td>
            <td style="text-align:right; padding-right:50px;"><h5 style="margin-top:0;">Portal Intake: <%= avg_tele_portal_intake_made %> / <%= avg_tele_portal_intake_attempts %></h5></td>
          </tr>
          <tr>
            <td><h5 style="margin-top:0;">Pyramid Intake: <%= avg_tele_pyramid_intake %></h5></td>
            <td style="text-align:right; padding-right:50px;"><h5 style="margin-top:0;">Unprotected Intake: <%= avg_tele_unprotected_intake %></h5></td>
          </tr>
          <tr>
            <td><h5 style="margin-top:0;">Floor Intake: <%= avg_tele_floor_intake %></h5></td>
            <td style="text-align:right; padding-right:50px;"><h5 style="margin-top:0;">Total Orderly: <%= tot_tele_orderly %></h5></td>
          </tr>
          <tr>
            <td><h5 style="margin-top:0;">Max Highest Level: <%= max_tele_highest_level %> (Frq: <%= frq_tele_highest_level %>)</h5></td>
            <td style="text-align:right; padding-right:50px;"><h5 style="margin-top:0;">Platform: <%= tot_tele_platform %></h5></td>
          </tr>
          <tr>
            <td><h5 style="margin-top:0;">Self-Climb: <%= tot_tele_climb %> / <%= tot_tele_climb_attempts %></h5></td>
            <td style="text-align:right; padding-right:50px;"><h5 style="margin-top:0;">Assisted Climb: <%= tot_tele_climb_assisted %></h5></td>
          </tr>
          <tr>
            <td><h5 style="margin-top:0;">Plus One: <%= tot_tele_plus_one %> / <%= tot_tele_plus_one_attempts %></h5></td>
            <td style="text-align:right; padding-right:50px;"><h5 style="margin-top:0;">Plus Two: <%= tot_tele_plus_two %> / <%= tot_tele_plus_two_attempts %></h5></td>
          </tr>
          <tr>
            <td><h5 style="margin-top:0;">Mobility Rating: <%= avg_driver_rating %></h5></td>
            <td style="text-align:right; padding-right:50px;"><h5 style="margin-top:0;">Defense Rating: <%= avg_defense_rating %></h5></td>
          </tr>
        </table>
      </div>
      <div class="col-lg-7 col-lg-offset-0 col-md-6 col-md-offset-1 col-sm-offset-0 col-xs-offset-0 col-sm-12 col-xs-12" style="font-size: 14px; top: 15px;">
        <div class="row">
          <!--<h4><strong>Intake Trend</strong></h4>-->
          <canvas id="intake_trend"></canvas>
        </div>

        <div class="row">
          <!--<h4><strong>Cubes Trend</strong></h4>-->
          <canvas id="cubes_trend"></canvas>
        </div>

        <script type="text/javascript">
          var intake_data = {
            labels: [<%= trend_labels %> 'Next'],
            datasets: [
              {
                label: "Pyramid",
                backgroundColor: "rgba(255,166,158,0.2)",
                borderColor: "rgba(255,166,158,1)",
                pointBorderColor: "#000",
                data: [<%= pyramid_intake_trend %>]
              },
              {
                label: "Unprotected",
                backgroundColor: "rgba(201,235,148,0.2)",
                borderColor: "rgba(201,235,148,1)",
                pointBorderColor: "#000",
                data: [<%= unprotected_intake_trend %>]
              },
              {
                label: "Portal",
                backgroundColor: "rgba(151,187,205,0.2)",
                borderColor: "rgba(151,187,205,1)",
                pointBorderColor: "#000",
                data: [<%= portal_intake_trend %>]
              },
              {
                label: "Floor",
                backgroundColor: "rgba(247,239,118,0.2)",
                borderColor: "rgba(247,239,118,1)",
                pointBorderColor: "#000",
                data: [<%= floor_intake_trend %>]
              },
              {
                label: "Total",
                backgroundColor: "rgba(228,156,255,0.2)",
                borderColor: "rgba(228,156,255,1)",
                pointBorderColor: "#000",
                data: [<%= total_intake_trend %>]
              }
            ]
          };

          var cubes_data = {
            labels: [<%= trend_labels %> 'Next'],
            datasets: [
              {
                label: "Near Switch",
                backgroundColor: "rgba(255,166,158,0.2)",
                borderColor: "rgba(255,166,158,1)",
                pointBorderColor: "#000",
                data: [<%= near_switch_cubes_trend %>]
              },
              {
                label: "Far Switch",
                backgroundColor: "rgba(201,235,148,0.2)",
                borderColor: "rgba(201,235,148,1)",
                pointBorderColor: "#000",
                data: [<%= far_switch_cubes_trend %>]
              },
              {
                label: "Scale High",
                backgroundColor: "rgba(151,187,205,0.2)",
                borderColor: "rgba(151,187,205,1)",
                pointBorderColor: "#000",
                data: [<%= scale_high_cubes_trend %>]
              },
              {
                label: "Scale Low",
                backgroundColor: "rgba(168,254,254,0.2)",
                borderColor: "rgba(168,254,254,1)",
                pointBorderColor: "#000",
                data: [<%= scale_low_cubes_trend %>]
              },
              {
                label: "Exchange",
                backgroundColor: "rgba(247,239,118,0.2)",
                borderColor: "rgba(247,239,118,1)",
                pointBorderColor: "#000",
                data: [<%= exchange_cubes_trend %>]
              },
              {
                label: "Total",
                backgroundColor: "rgba(228,156,255,0.2)",
                borderColor: "rgba(228,156,255,1)",
                pointBorderColor: "#000",
                data: [<%= total_cubes_trend %>]
              }
            ]
          };
            
          var ctx = document.getElementById("intake_trend").getContext("2d");
          var ctx1 = document.getElementById("cubes_trend").getContext("2d");
          var myLineChart = new Chart(ctx, { 
            type: 'line',
            data: intake_data,
            options: {
              title: {
                display: true,
                text: 'Intake Trend',
                fontSize: 16
              },
              scales: {
                yAxes: [{
                  ticks: {
                    suggestedMin: 0,
                    suggestedMax: 32,
                    stepSize: 4
                  }
                }]
              },
              tooltips: {
                intersect: false,
                mode: 'index',
                callbacks: {
                  labelColor: function(tooltipItem, chart) {
                    var dataset = chart.config.data.datasets[tooltipItem.datasetIndex];
                    return {
                      backgroundColor : dataset.borderColor
                    }
                  }
                }
              }
            }
          });
          var myLineChart1 = new Chart(ctx1, { 
            type: 'line',
            data: cubes_data,
            options: {
              title: {
                display: true,
                text: 'Cubes Trend',
                fontSize: 16
              },
              scales: {
                yAxes: [{
                  ticks: {
                    suggestedMin: 0,
                    suggestedMax: 32,
                    stepSize: 4
                  }
                }]
              },
              tooltips: {
                intersect: false,
                mode: 'index',
                callbacks: {
                  labelColor: function(tooltipItem, chart) {
                    var dataset = chart.config.data.datasets[tooltipItem.datasetIndex];
                    return {
                      backgroundColor : dataset.borderColor
                    }
                  }
                }
              }
            }
          });
        </script>
      </div>
    </div>
    <div class="row">
      <div class="row">
        <div class="col-lg-6"><canvas id="scale_plot"></canvas></div>
        <div class="col-lg-6"><canvas id="exchange_plot"></canvas></div>
      </div>
      <div class="row">
        <div class="col-lg-6"><canvas id="near_switch_plot"></canvas></div>
        <div class="col-lg-6"><canvas id="far_switch_plot"></canvas></div>
      </div>
      <script type="text/javascript">
        var polar_scale_data = {
          labels: ['Pyramid', 'Unprotected', 'Portal', 'Floor'],
          datasets: [
            {
              label: "Scale",
              backgroundColor: [
                "rgba(255,166,158,5)",
                "rgba(201,235,148,.5)",
                "rgba(151,187,205,.5)",
                "rgba(247,239,118,.5)"
              ],
              borderColor: [
                "rgba(255,166,158,1)",
                "rgba(201,235,148,1)",
                "rgba(151,187,205,1)",
                "rgba(247,239,118,1)"
              ],
              data: [<%= pyramid_scale_trend %>, <%= unprotected_scale_trend %>, <%= portal_scale_trend %>, <%= floor_scale_trend %>]
            }
          ]
        };
        
        var polar_exchange_data = {
          labels: ['Pyramid', 'Unprotected', 'Portal', 'Floor'],
          datasets: [
            {
              label: "Scale",
              backgroundColor: [
                "rgba(255,166,158,5)",
                "rgba(201,235,148,.5)",
                "rgba(151,187,205,.5)",
                "rgba(247,239,118,.5)"
              ],
              borderColor: [
                "rgba(255,166,158,1)",
                "rgba(201,235,148,1)",
                "rgba(151,187,205,1)",
                "rgba(247,239,118,1)"
              ],
              data: [<%= pyramid_exchange_trend %>, <%= unprotected_exchange_trend %>, <%= portal_exchange_trend %>, <%= floor_exchange_trend %>]
            }
          ]
        };
      
        var polar_near_switch_data = {
          labels: ['Pyramid', 'Unprotected', 'Portal', 'Floor'],
          datasets: [
            {
              label: "Scale",
              backgroundColor: [
                "rgba(255,166,158,5)",
                "rgba(201,235,148,.5)",
                "rgba(151,187,205,.5)",
                "rgba(247,239,118,.5)"
              ],
              borderColor: [
                "rgba(255,166,158,1)",
                "rgba(201,235,148,1)",
                "rgba(151,187,205,1)",
                "rgba(247,239,118,1)"
              ],
              data: [<%= pyramid_near_switch_trend %>, <%= unprotected_near_switch_trend %>, <%= portal_near_switch_trend %>, <%= floor_near_switch_trend %>]
            }
          ]
        };
        
        var polar_far_switch_data = {
          labels: ['Pyramid', 'Unprotected', 'Portal', 'Floor'],
          datasets: [
            {
              label: "Scale",
              backgroundColor: [
                "rgba(255,166,158,5)",
                "rgba(201,235,148,.5)",
                "rgba(151,187,205,.5)",
                "rgba(247,239,118,.5)"
              ],
              borderColor: [
                "rgba(255,166,158,1)",
                "rgba(201,235,148,1)",
                "rgba(151,187,205,1)",
                "rgba(247,239,118,1)"
              ],
              data: [<%= pyramid_far_switch_trend %>, <%= unprotected_far_switch_trend %>, <%= portal_far_switch_trend %>, <%= floor_far_switch_trend %>]
            }
          ]
        };
      
        var radar_data = {
          labels: ['Scale', 'Near Switch', 'Far Switch', 'Exchange'],
          datasets: [
            {
              label: "Pyramid",
              backgroundColor: "rgba(255,166,158,0.2)",
              borderColor: "rgba(255,166,158,1)",
              pointBorderColor: "#000",
              pointRadius: 3,
              pointHitRadius: 27,
              data: [<%= pyramid_radar_trend %>]
            },
            {
              label: "Unprotected",
              backgroundColor: "rgba(201,235,148,0.2)",
              borderColor: "rgba(201,235,148,1)",
              pointBorderColor: "#000",
              pointRadius: 3,
              pointHitRadius: 27,
              data: [<%= unprotected_radar_trend %>]
            },
            {
              label: "Portal",
              backgroundColor: "rgba(151,187,205,0.2)",
              borderColor: "rgba(151,187,205,1)",
              pointBorderColor: "#000",
              pointRadius: 3,
              pointHitRadius: 27,
              data: [<%= portal_radar_trend %>]
            },
            {
              label: "Floor",
              backgroundColor: "rgba(247,239,118,0.2)",
              borderColor: "rgba(247,239,118,1)",
              pointBorderColor: "#000",
              pointRadius: 3,
              pointHitRadius: 27,
              data: [<%= floor_radar_trend %>]
            }
          ]
        };

        window.onload = function()
        {
          var ctx = document.getElementById("scale_plot").getContext("2d");
          var myLineChart = new Chart(ctx, { 
            type: 'polarArea',
            data: polar_scale_data,
            options: {
              startAngle: 0.25 * Math.PI,
              title: {
                display: true,
                text: 'Scale',
                fontSize: 16
              },
              tooltips: {
                intersect: true,
                displayColors: true,
                mode: 'index'
              },
              scale: {
                pointLabels: {
                  display: false
                }
              }
            }
          });
          var ctx1 = document.getElementById("exchange_plot").getContext("2d");
          var myLineChart1 = new Chart(ctx1, { 
            type: 'polarArea',
            data: polar_exchange_data,
            options: {
              startAngle: 0.25 * Math.PI,
              title: {
                display: true,
                text: 'Exchange',
                fontSize: 16
              },
              tooltips: {
                intersect: true,
                displayColors: true,
                mode: 'index'
              },
              scale: {
                pointLabels: {
                  display: false
                }
              }
            }
          });
          var ctx2 = document.getElementById("near_switch_plot").getContext("2d");
          var myLineChart2 = new Chart(ctx2, { 
            type: 'polarArea',
            data: polar_near_switch_data,
            options: {
              startAngle: 0.25 * Math.PI,
              title: {
                display: true,
                text: 'Near Switch',
                fontSize: 16
              },
              tooltips: {
                intersect: true,
                displayColors: true,
                mode: 'index'
              },
              scale: {
                pointLabels: {
                  display: false
                }
              }
            }
          });
          var ctx3 = document.getElementById("far_switch_plot").getContext("2d");
          var myLineChart3 = new Chart(ctx3, { 
            type: 'polarArea',
            data: polar_far_switch_data,
            options: {
              startAngle: 0.25 * Math.PI,
              title: {
                display: true,
                text: 'Far Switch',
                fontSize: 16
              },
              tooltips: {
                intersect: true,
                displayColors: true,
                mode: 'index'
              },
              scale: {
                pointLabels: {
                  display: false
                }
              }
            }
          });
        }
      </script>
    </div>
    <div id="spoiler" style="display: none;">
      <%- videos %>
    </div>
    <button title="Click to show/hide videos" type="button" onclick="if(document.getElementById('spoiler') .style.display=='none') {document.getElementById('spoiler') .style.display=''}else{document.getElementById('spoiler') .style.display='none'}">Show/Hide Videos</button>
  </main>

  <footer>
    <% include ../partials/footer %>
  </footer>
</body>
</html>
